{"version":3,"sources":["context.js","componets/contacts/Contact.js","componets/contacts/Contacts.js","componets/layout/Header.js","componets/pages/About.js","componets/layout/TextInputGroup.js","componets/contacts/AddContact.js","componets/contacts/EditContact.js","componets/test/Test.js","componets/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","event","onDeleteClick","delete","t0","console","log","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","bind","float","color","react_router_dom","to","marginRight","Contacts","Fragment","contacts_Contact","Header","branding","href","defaultProps","prototype","PropTypes","string","isRequired","About","TextInputGroup","_ref","lalel","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onformChange","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","label","EditContact","updatedContact","match","params","put","Test","title","body","fetch","then","response","json","NotFound","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f627f458.chunk.js","sourcesContent":["// provider component\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nconst Context = React.createContext();\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'DELETE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.filter(\n                    contact => contact.id !== action.payload\n                )\n            };\n\n        case 'ADD_CONTACT':\n            return {\n                ...state,\n                contacts: [action.payload, ...state.contacts]\n            };\n        case 'UPDATE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.map(contact =>\n                    contact.id === action.payload.id\n                        ? (contact = action.payload)\n                        : contact\n                )\n            };\n        default:\n            return state;\n    }\n};\n\nexport class Provider extends Component {\n    state = {\n        contacts: [],\n        dispatch: action => this.setState(state => reducer(state, action))\n    };\n\n    async componentDidMount() {\n        const res = await axios.get(\n            'https://jsonplaceholder.typicode.com/users'\n        );\n        this.setState({\n            contacts: res.data\n        });\n    }\n\n    render() {\n        return (\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        );\n    }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Link } from 'react-router-dom';\n\nimport { Consumer } from '../../context';\nimport axios from 'axios';\n\nclass Contact extends Component {\n    // Note you do not need to bind 'this' when using an arrow function\n    state = {\n        showContactInfo: false\n    };\n    onShowClick = event => {\n        this.setState({ showContactInfo: !this.state.showContactInfo });\n    };\n    onDeleteClick = async (id, dispatch) => {\n        try {\n            await axios.delete(\n                `https://jsonplaceholder.typicode.com/users/${id}`\n            );\n\n            dispatch({ type: 'DELETE_CONTACT', payload: id });\n        } catch (error) {\n            console.log('Dont worry about it');\n        }\n    };\n    render() {\n        const { name, email, phone, id } = this.props.contact;\n        const { showContactInfo } = this.state;\n\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                        <div className=\"card card-body mb-3\">\n                            <h4>\n                                Contact: {name}{' '}\n                                <i\n                                    onClick={this.onShowClick}\n                                    className=\"fas fa-caret-down\"\n                                    style={{ cursor: 'pointer' }}\n                                />\n                                <i\n                                    onClick={this.onDeleteClick.bind(\n                                        this,\n                                        id,\n                                        dispatch\n                                    )}\n                                    className=\"fas fa-trash-alt\"\n                                    style={{\n                                        cursor: 'pointer',\n                                        float: 'right',\n                                        color: 'red'\n                                    }}\n                                />\n                                <Link to={`contact/edit/${id}`}>\n                                    <i\n                                        className=\"fas fa-pencil-alt\"\n                                        style={{\n                                            cursor: 'pointer',\n                                            float: 'right',\n                                            color: 'green',\n                                            marginRight: '1rem'\n                                        }}\n                                    />\n                                </Link>\n                            </h4>\n                            {showContactInfo ? (\n                                <ul className=\"list-group\">\n                                    <li className=\"list-group-item\">\n                                        Eamil: {email}\n                                    </li>\n                                    <li className=\"list-group-item\">\n                                        Phone: {phone}\n                                    </li>\n                                </ul>\n                            ) : null}\n                        </div>\n                    );\n                }}\n            </Consumer>\n        );\n    }\n}\n\nContact.propTypes = {\n    contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\n\nexport default class Contacts extends Component {\n    render() {\n        return (\n            <Consumer>\n                {value => {\n                    const { contacts } = value;\n                    return (\n                        <React.Fragment>\n                            <h1 className=\"display-4 mb-2\">\n                                <span className=\"text-danger\">Contact</span>{' '}\n                                List\n                            </h1>\n                            {contacts.map(contact => (\n                                <Contact key={contact.id} contact={contact} />\n                            ))}\n                        </React.Fragment>\n                    );\n                }}\n            </Consumer>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n    const { branding } = props;\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n            <div className=\"container\">\n                <a href=\"/\" className=\"navbar-brand\">\n                    {branding}\n                </a>\n                <div>\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item\">\n                            <Link to=\"/\" className=\"nav-link\">\n                                <i className=\"fas fa-home\" /> Home\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to=\"/About\" className=\"nav-link\">\n                                <i className=\"fas fa-question\" /> About\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to=\"/contact/add\" className=\"nav-link\">\n                                <i className=\"fas fa-plus\" /> Add Contact\n                            </Link>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    );\n};\n\nHeader.defaultProps = {\n    branding: 'ContactManager'\n};\nHeader.prototype = {\n    branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from 'react';\n\nexport default function About() {\n    return (\n        <div>\n            <h1 className=\"display-4\">About Contact Manager</h1>\n            <p className=\"lead\">Simple app to manage contacts</p>\n        </div>\n    );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n    lalel,\n    name,\n    value,\n    placeholder,\n    type,\n    onChange,\n    error\n}) => {\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={name}>{lalel}</label>\n            <input\n                type={type}\n                name={name}\n                className={classnames('form-control form-control-lg', {\n                    'is-invalid': error\n                })}\n                placeholder={placeholder}\n                value={value}\n                onChange={onChange}\n                error={error}\n            />\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    );\n};\n//\n//\n//\nTextInputGroup.propTypes = {\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n    type: 'text'\n};\n\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nexport default class AddContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    };\n    // An onChange listener is needed to update the state when the\n    // user inputs values into the form due to the form being a controlled component\n\n    onformChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    onSubmit = async (dispatch, event) => {\n        event.preventDefault();\n        const { name, email, phone } = this.state;\n        if (name === '') {\n            this.setState({ errors: { name: 'Name is required' } });\n            return;\n        }\n        if (email === '') {\n            this.setState({ errors: { email: 'Phone is required' } });\n            return;\n        }\n        if (phone === '') {\n            this.setState({ errors: { phone: 'Phone is required' } });\n            return;\n        }\n        const newContact = {\n            name: name,\n            email: email,\n            phone: phone\n        };\n        const res = await axios.post(\n            'https://jsonplaceholder.typicode.com/users/',\n            newContact\n        );\n        dispatch({ type: 'ADD_CONTACT', payload: res.data });\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        });\n\n        this.props.history.push('/');\n    };\n    render() {\n        const { name, email, phone, errors } = this.state;\n\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                        <div className=\"card mb-3\">\n                            <div className=\"card-header\">Add contact</div>\n                            <div className=\"card-body\">\n                                <form\n                                    onSubmit={this.onSubmit.bind(\n                                        this,\n                                        dispatch\n                                    )}\n                                >\n                                    <TextInputGroup\n                                        name=\"name\"\n                                        label=\"Name\"\n                                        placeholder=\"Enter Name\"\n                                        value={name}\n                                        onChange={this.onformChange}\n                                        error={errors.name}\n                                    />\n                                    <TextInputGroup\n                                        name=\"email\"\n                                        label=\"Email\"\n                                        type=\"email\"\n                                        placeholder=\"Enter Email\"\n                                        value={email}\n                                        onChange={this.onformChange}\n                                        error={errors.email}\n                                    />\n                                    <TextInputGroup\n                                        name=\"phone\"\n                                        label=\"Phone\"\n                                        placeholder=\"Enter number\"\n                                        value={phone}\n                                        onChange={this.onformChange}\n                                        error={errors.phone}\n                                    />\n                                    <input\n                                        type=\"submit\"\n                                        value=\"Add Contant\"\n                                        className=\"btn btn-light btn-block\"\n                                    />\n                                </form>\n                            </div>\n                        </div>\n                    );\n                }}\n            </Consumer>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nexport default class EditContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    };\n    // An onChange listener is needed to update the state when the\n    // user inputs values into the form due to the form being a controlled component\n\n    async componentDidMount() {\n        const { id } = this.props.match.params;\n        const res = await axios.get(\n            `https://jsonplaceholder.typicode.com/users/${id}`\n        );\n        const contact = res.data;\n        this.setState({\n            name: contact.name,\n            email: contact.email,\n            phone: contact.phone\n        });\n    }\n    onformChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    onSubmit = async (dispatch, event) => {\n        event.preventDefault();\n        const { name, email, phone } = this.state;\n        if (name === '') {\n            this.setState({ errors: { name: 'Name is required' } });\n            return;\n        }\n        if (email === '') {\n            this.setState({ errors: { email: 'Phone is required' } });\n            return;\n        }\n        if (phone === '') {\n            this.setState({ errors: { phone: 'Phone is required' } });\n            return;\n        }\n\n        const updatedContact = {\n            name: name,\n            email: email,\n            phone: phone\n        };\n        // Need to send off the updated contact\n        const { id } = this.props.match.params;\n\n        const res = await axios.put(\n            `https://jsonplaceholder.typicode.com/users/${id}`,\n            updatedContact\n        );\n\n        dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\n        \n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        });\n\n        this.props.history.push('/');\n    };\n    render() {\n        const { name, email, phone, errors } = this.state;\n\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                        <div className=\"card mb-3\">\n                            <div className=\"card-header\">Edit contact</div>\n                            <div className=\"card-body\">\n                                <form\n                                    onSubmit={this.onSubmit.bind(\n                                        this,\n                                        dispatch\n                                    )}\n                                >\n                                    <TextInputGroup\n                                        name=\"name\"\n                                        label=\"Name\"\n                                        placeholder=\"Enter Name\"\n                                        value={name}\n                                        onChange={this.onformChange}\n                                        error={errors.name}\n                                    />\n                                    <TextInputGroup\n                                        name=\"email\"\n                                        label=\"Email\"\n                                        type=\"email\"\n                                        placeholder=\"Enter Email\"\n                                        value={email}\n                                        onChange={this.onformChange}\n                                        error={errors.email}\n                                    />\n                                    <TextInputGroup\n                                        name=\"phone\"\n                                        label=\"Phone\"\n                                        placeholder=\"Enter number\"\n                                        value={phone}\n                                        onChange={this.onformChange}\n                                        error={errors.phone}\n                                    />\n                                    <input\n                                        type=\"submit\"\n                                        value=\"Edit Contant\"\n                                        className=\"btn btn-light btn-block\"\n                                    />\n                                </form>\n                            </div>\n                        </div>\n                    );\n                }}\n            </Consumer>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nclass Test extends Component {\n    state = {\n        title: '',\n        body: ''\n    };\n\n    componentDidMount() {\n        console.log('did mount');\n        fetch('https://jsonplaceholder.typicode.com/todos/1')\n            .then(response => response.json())\n            .then(data =>\n                this.setState({\n                    title: data.title,\n                    body: data.body\n                })\n            );\n    }\n    componentWillMount() {\n        console.log('will mount');\n    }\n    render() {\n        const { title, body } = this.state;\n        return (\n            <div>\n                <h1>{title}</h1>\n                <p>{body}</p>\n            </div>\n        );\n    }\n}\n\nexport default Test;\n","import React from 'react';\n\nexport default function NotFound() {\n    return (\n        <div>\n            <h1 className=\"display-4\">404 Page Not found</h1>\n            <p className=\"lead\">Sorry that page does not exists</p>\n        </div>\n    );\n}\n","import React from 'react';\nimport './App.css';\nimport Contacts from './componets/contacts/Contacts';\nimport Header from './componets/layout/Header';\nimport About from './componets/pages/About';\nimport { Provider } from './context';\nimport AddContact from './componets/contacts/AddContact';\nimport EditContact from './componets/contacts/EditContact';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Test from './componets/test/Test';\nimport NotFound from './componets/pages/NotFound';\nfunction App() {\n    return (\n        <Provider>\n            <Router>\n                <div className=\"App\">\n                    <Header branding=\"Contact Manager\" />\n\n                    <div className=\"container\">\n                        <Switch>\n                            <Route exact path=\"/\" component={Contacts} />\n\n                            <Route exact path=\"/about\" component={About} />\n                            <Route\n                                exact\n                                path=\"/contact/add\"\n                                component={AddContact}\n                            />\n                            <Route\n                                exact\n                                path=\"/contact/edit/:id\"\n                                component={EditContact}\n                            />\n                            <Route exact path=\"/test\" component={Test} />\n                            <Route component={NotFound} />\n                        </Switch>\n                    </div>\n                </div>\n            </Router>\n        </Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}